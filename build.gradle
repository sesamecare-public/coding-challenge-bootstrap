buildscript {
    ext {
        springBootVersion = '2.7.3'
        lombokVersion = '1.18.24'
        springCloudVersion = '2021.0.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    }
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "jacoco"

group = "com.sesame"
version = "latest-SNAPSHOT"

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'net.logstash.logback:logstash-logback-encoder:7.2'

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"


    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.7.0'
}

test {
    useJUnitPlatform()
    beforeTest { descriptor -> logger.lifecycle("Running test: $descriptor")
    }
    testLogging {
        exceptionFormat = "full"
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            if (result.testCount == 0) {
                throw new IllegalStateException("No tests were found. Failing the build")
            }
        }
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = true
        html.destination = file("${buildDir}/jacocoHtml")

    }
}
